{
  "contractName": "ApartmentMarket",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sku",
          "type": "uint256"
        }
      ],
      "name": "LogForRent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sku",
          "type": "uint256"
        }
      ],
      "name": "LogForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sku",
          "type": "uint256"
        }
      ],
      "name": "LogRent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Houses",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "sku",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sellprice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentprice",
          "type": "uint256"
        },
        {
          "internalType": "enum ApartmentMarket.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "houseowner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "renter",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "skuCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sellprice",
          "type": "uint256"
        }
      ],
      "name": "addHouse",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sku",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentprice",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sku",
          "type": "uint256"
        }
      ],
      "name": "rentItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sku\",\"type\":\"uint256\"}],\"name\":\"LogForRent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sku\",\"type\":\"uint256\"}],\"name\":\"LogForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sku\",\"type\":\"uint256\"}],\"name\":\"LogRent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Houses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"sku\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentprice\",\"type\":\"uint256\"},{\"internalType\":\"enum ApartmentMarket.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"houseowner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sellprice\",\"type\":\"uint256\"}],\"name\":\"addHouse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sku\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rentprice\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sku\",\"type\":\"uint256\"}],\"name\":\"rentItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skuCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Laura Shi\",\"events\":{\"LogForRent(uint256)\":{\"details\":\"<LogForRent event: sku arg>\"},\"LogForSale(uint256)\":{\"details\":\"<LogForSale event: sku arg>\"},\"LogRent(uint256)\":{\"details\":\"<LogRent event: sku arg>\"}},\"kind\":\"dev\",\"methods\":{\"addHouse(string,uint256)\":{\"details\":\"here you can set isOnwer modifier to allow only the contract owner to add apartment to the contract, if necessary\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"skuCount\":{\"details\":\"skuCount Number of apartments in the contract\"}},\"title\":\"A sample of Apartment Marketplace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"You can use this contract to stimuate on chain apartment purchasing and renting function\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ApartmentMarket.sol\":\"ApartmentMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/ApartmentMarket.sol\":{\"keccak256\":\"0x9c59d0182403e3b2eb5923552139ed0b3689162a417e8c1784ca6ec7f69e0ef2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1765c2ac0d7f156391bfaf531e22178e09871b1b003d2794b765cc283bbf7d\",\"dweb:/ipfs/Qme99RE7EiLqVuZEbfWNk4PmKaN88tUPdt2Xvi5kXiMGkJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003a60201b60201c565b61004260201b60201c565b6000600181905550610106565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611688806101156000396000f3fe60806040526004361061007b5760003560e01c80639979c0091161004e5780639979c00914610131578063c88be6631461014d578063d78d38521461018a578063f2fde38b146101a65761007b565b806322702473146100805780632ea8fd72146100ab578063715018a6146100ef5780638da5cb5b14610106575b600080fd5b34801561008c57600080fd5b506100956101cf565b6040516100a2919061132e565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906110a4565b6101d5565b6040516100e6989796959493929190611269565b60405180910390f35b3480156100fb57600080fd5b50610104610312565b005b34801561011257600080fd5b5061011b61039a565b6040516101289190611233565b60405180910390f35b61014b600480360381019061014691906110cd565b6103c3565b005b34801561015957600080fd5b50610174600480360381019061016f9190611050565b6106fb565b604051610181919061124e565b60405180910390f35b6101a4600480360381019061019f91906110a4565b610a13565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190611027565b610d2e565b005b60015481565b60026020528060005260406000206000915090508060000180546101f890611511565b80601f016020809104026020016040519081016040528092919081815260200182805461022490611511565b80156102715780601f1061024657610100808354040283529160200191610271565b820191906000526020600020905b81548152906001019060200180831161025457829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b61031a610e26565b73ffffffffffffffffffffffffffffffffffffffff1661033861039a565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103859061130e565b60405180910390fd5b6103986000610e2e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b81600060028111156103fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060040160009054906101000a900460ff16600281111561045a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561047d575060006002600083815260200190815260200160002060020154115b61048657600080fd5b8260026000828152602001908152602001600020600201543410156104aa57600080fd5b83336002600087815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600087815260200190815260200160002060040160006101000a81548160ff02191690836002811115610560577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506002600086815260200190815260200160002060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60026000888152602001908152602001600020600201549081150290604051600060405180830381858888f193505050501580156105f7573d6000803e3d6000fd5b508360026000878152602001908152602001600020600301819055507faff779a2b0f7d6ac7566ca9920c1a4cf550c9691db23499a78d4eac3875b76b285604051610642919061132e565b60405180910390a160006002600083815260200190815260200160002060020154905060008134610673919061141c565b90506002600084815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106f1573d6000803e3d6000fd5b5050505050505050565b6000610705610e26565b73ffffffffffffffffffffffffffffffffffffffff1661072361039a565b73ffffffffffffffffffffffffffffffffffffffff1614610779576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107709061130e565b60405180910390fd5b604051806101000160405280848152602001600154815260200183815260200160008152602001600060028111156107da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000019080519060200190610864929190610ef2565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360028111156108d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600180546109bf91906113c6565b6001819055507f4627c48065af2a9648cbecdd4b9da340c00e501243cd49a8a71c30c987e8b761600180546109f4919061141c565b604051610a01919061132e565b60405180910390a16001905092915050565b8060016002811115610a4e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060040160009054906101000a900460ff166002811115610aaa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610acd575060006002600083815260200190815260200160002060030154115b610ad657600080fd5b816002600082815260200190815260200160002060030154341015610afa57600080fd5b82336002600086815260200190815260200160002060060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600280600086815260200190815260200160002060040160006101000a81548160ff02191690836002811115610baf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506002600085815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60026000878152602001908152602001600020600301549081150290604051600060405180830381858888f19350505050158015610c46573d6000803e3d6000fd5b507f2955efdea5de66418264d9beb668a636aa1089dd58b746fdadd351df4a8eb31c84604051610c76919061132e565b60405180910390a160006002600083815260200190815260200160002060030154905060008134610ca7919061141c565b90506002600084815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d25573d6000803e3d6000fd5b50505050505050565b610d36610e26565b73ffffffffffffffffffffffffffffffffffffffff16610d5461039a565b73ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061130e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e11906112ee565b60405180910390fd5b610e2381610e2e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610efe90611511565b90600052602060002090601f016020900481019282610f205760008555610f67565b82601f10610f3957805160ff1916838001178555610f67565b82800160010185558215610f67579182015b82811115610f66578251825591602001919060010190610f4b565b5b509050610f749190610f78565b5090565b5b80821115610f91576000816000905550600101610f79565b5090565b6000610fa8610fa38461137a565b611349565b905082815260208101848484011115610fc057600080fd5b610fcb8482856114cf565b509392505050565b600081359050610fe281611624565b92915050565b600082601f830112610ff957600080fd5b8135611009848260208601610f95565b91505092915050565b6000813590506110218161163b565b92915050565b60006020828403121561103957600080fd5b600061104784828501610fd3565b91505092915050565b6000806040838503121561106357600080fd5b600083013567ffffffffffffffff81111561107d57600080fd5b61108985828601610fe8565b925050602061109a85828601611012565b9150509250929050565b6000602082840312156110b657600080fd5b60006110c484828501611012565b91505092915050565b600080604083850312156110e057600080fd5b60006110ee85828601611012565b92505060206110ff85828601611012565b9150509250929050565b61111281611462565b82525050565b61112181611450565b82525050565b61113081611474565b82525050565b61113f816114bd565b82525050565b6000611150826113aa565b61115a81856113b5565b935061116a8185602086016114de565b611173816115ff565b840191505092915050565b600061118b6026836113b5565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111f16020836113b5565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61122d816114b3565b82525050565b60006020820190506112486000830184611118565b92915050565b60006020820190506112636000830184611127565b92915050565b6000610100820190508181036000830152611284818b611145565b9050611293602083018a611224565b6112a06040830189611224565b6112ad6060830188611224565b6112ba6080830187611136565b6112c760a0830186611109565b6112d460c0830185611109565b6112e160e0830184611109565b9998505050505050505050565b600060208201905081810360008301526113078161117e565b9050919050565b60006020820190508181036000830152611327816111e4565b9050919050565b60006020820190506113436000830184611224565b92915050565b6000604051905081810181811067ffffffffffffffff821117156113705761136f6115d0565b5b8060405250919050565b600067ffffffffffffffff821115611395576113946115d0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006113d1826114b3565b91506113dc836114b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561141157611410611543565b5b828201905092915050565b6000611427826114b3565b9150611432836114b3565b92508282101561144557611444611543565b5b828203905092915050565b600061145b82611493565b9050919050565b600061146d82611493565b9050919050565b60008115159050919050565b600081905061148e82611610565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c882611480565b9050919050565b82818337600083830152505050565b60005b838110156114fc5780820151818401526020810190506114e1565b8381111561150b576000848401525b50505050565b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c6115a1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6003811061162157611620611572565b5b50565b61162d81611450565b811461163857600080fd5b50565b611644816114b3565b811461164f57600080fd5b5056fea2646970667358221220f894359cae60f169c988801ba55cb9cc36a201d91d91d7004c302b03c5ebb3a664736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639979c0091161004e5780639979c00914610131578063c88be6631461014d578063d78d38521461018a578063f2fde38b146101a65761007b565b806322702473146100805780632ea8fd72146100ab578063715018a6146100ef5780638da5cb5b14610106575b600080fd5b34801561008c57600080fd5b506100956101cf565b6040516100a2919061132e565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906110a4565b6101d5565b6040516100e6989796959493929190611269565b60405180910390f35b3480156100fb57600080fd5b50610104610312565b005b34801561011257600080fd5b5061011b61039a565b6040516101289190611233565b60405180910390f35b61014b600480360381019061014691906110cd565b6103c3565b005b34801561015957600080fd5b50610174600480360381019061016f9190611050565b6106fb565b604051610181919061124e565b60405180910390f35b6101a4600480360381019061019f91906110a4565b610a13565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190611027565b610d2e565b005b60015481565b60026020528060005260406000206000915090508060000180546101f890611511565b80601f016020809104026020016040519081016040528092919081815260200182805461022490611511565b80156102715780601f1061024657610100808354040283529160200191610271565b820191906000526020600020905b81548152906001019060200180831161025457829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b61031a610e26565b73ffffffffffffffffffffffffffffffffffffffff1661033861039a565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103859061130e565b60405180910390fd5b6103986000610e2e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b81600060028111156103fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060040160009054906101000a900460ff16600281111561045a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561047d575060006002600083815260200190815260200160002060020154115b61048657600080fd5b8260026000828152602001908152602001600020600201543410156104aa57600080fd5b83336002600087815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600087815260200190815260200160002060040160006101000a81548160ff02191690836002811115610560577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506002600086815260200190815260200160002060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60026000888152602001908152602001600020600201549081150290604051600060405180830381858888f193505050501580156105f7573d6000803e3d6000fd5b508360026000878152602001908152602001600020600301819055507faff779a2b0f7d6ac7566ca9920c1a4cf550c9691db23499a78d4eac3875b76b285604051610642919061132e565b60405180910390a160006002600083815260200190815260200160002060020154905060008134610673919061141c565b90506002600084815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106f1573d6000803e3d6000fd5b5050505050505050565b6000610705610e26565b73ffffffffffffffffffffffffffffffffffffffff1661072361039a565b73ffffffffffffffffffffffffffffffffffffffff1614610779576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107709061130e565b60405180910390fd5b604051806101000160405280848152602001600154815260200183815260200160008152602001600060028111156107da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000019080519060200190610864929190610ef2565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360028111156108d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600180546109bf91906113c6565b6001819055507f4627c48065af2a9648cbecdd4b9da340c00e501243cd49a8a71c30c987e8b761600180546109f4919061141c565b604051610a01919061132e565b60405180910390a16001905092915050565b8060016002811115610a4e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060040160009054906101000a900460ff166002811115610aaa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610acd575060006002600083815260200190815260200160002060030154115b610ad657600080fd5b816002600082815260200190815260200160002060030154341015610afa57600080fd5b82336002600086815260200190815260200160002060060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600280600086815260200190815260200160002060040160006101000a81548160ff02191690836002811115610baf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506002600085815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60026000878152602001908152602001600020600301549081150290604051600060405180830381858888f19350505050158015610c46573d6000803e3d6000fd5b507f2955efdea5de66418264d9beb668a636aa1089dd58b746fdadd351df4a8eb31c84604051610c76919061132e565b60405180910390a160006002600083815260200190815260200160002060030154905060008134610ca7919061141c565b90506002600084815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d25573d6000803e3d6000fd5b50505050505050565b610d36610e26565b73ffffffffffffffffffffffffffffffffffffffff16610d5461039a565b73ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da19061130e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e11906112ee565b60405180910390fd5b610e2381610e2e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610efe90611511565b90600052602060002090601f016020900481019282610f205760008555610f67565b82601f10610f3957805160ff1916838001178555610f67565b82800160010185558215610f67579182015b82811115610f66578251825591602001919060010190610f4b565b5b509050610f749190610f78565b5090565b5b80821115610f91576000816000905550600101610f79565b5090565b6000610fa8610fa38461137a565b611349565b905082815260208101848484011115610fc057600080fd5b610fcb8482856114cf565b509392505050565b600081359050610fe281611624565b92915050565b600082601f830112610ff957600080fd5b8135611009848260208601610f95565b91505092915050565b6000813590506110218161163b565b92915050565b60006020828403121561103957600080fd5b600061104784828501610fd3565b91505092915050565b6000806040838503121561106357600080fd5b600083013567ffffffffffffffff81111561107d57600080fd5b61108985828601610fe8565b925050602061109a85828601611012565b9150509250929050565b6000602082840312156110b657600080fd5b60006110c484828501611012565b91505092915050565b600080604083850312156110e057600080fd5b60006110ee85828601611012565b92505060206110ff85828601611012565b9150509250929050565b61111281611462565b82525050565b61112181611450565b82525050565b61113081611474565b82525050565b61113f816114bd565b82525050565b6000611150826113aa565b61115a81856113b5565b935061116a8185602086016114de565b611173816115ff565b840191505092915050565b600061118b6026836113b5565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111f16020836113b5565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61122d816114b3565b82525050565b60006020820190506112486000830184611118565b92915050565b60006020820190506112636000830184611127565b92915050565b6000610100820190508181036000830152611284818b611145565b9050611293602083018a611224565b6112a06040830189611224565b6112ad6060830188611224565b6112ba6080830187611136565b6112c760a0830186611109565b6112d460c0830185611109565b6112e160e0830184611109565b9998505050505050505050565b600060208201905081810360008301526113078161117e565b9050919050565b60006020820190508181036000830152611327816111e4565b9050919050565b60006020820190506113436000830184611224565b92915050565b6000604051905081810181811067ffffffffffffffff821117156113705761136f6115d0565b5b8060405250919050565b600067ffffffffffffffff821115611395576113946115d0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006113d1826114b3565b91506113dc836114b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561141157611410611543565b5b828201905092915050565b6000611427826114b3565b9150611432836114b3565b92508282101561144557611444611543565b5b828203905092915050565b600061145b82611493565b9050919050565b600061146d82611493565b9050919050565b60008115159050919050565b600081905061148e82611610565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c882611480565b9050919050565b82818337600083830152505050565b60005b838110156114fc5780820151818401526020810190506114e1565b8381111561150b576000848401525b50505050565b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c6115a1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6003811061162157611620611572565b5b50565b61162d81611450565b811461163857600080fd5b50565b611644816114b3565b811461164f57600080fd5b5056fea2646970667358221220f894359cae60f169c988801ba55cb9cc36a201d91d91d7004c302b03c5ebb3a664736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11117:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:4"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:4"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:4"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:4"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:4"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:4"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:4"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:4"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:4",
                "type": ""
              }
            ],
            "src": "7:344:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:4",
                "type": ""
              }
            ],
            "src": "357:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:4",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:4"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:4"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:4"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:4"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:4"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:4",
                "type": ""
              }
            ],
            "src": "516:273:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "847:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "857:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "879:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "866:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "857:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "922:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "895:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "825:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "833:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "841:5:4",
                "type": ""
              }
            ],
            "src": "795:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1061:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1064:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1027:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1036:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1019:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1157:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1168:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1153:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1153:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1177:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1132:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "976:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "987:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "999:6:4",
                "type": ""
              }
            ],
            "src": "940:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1301:427:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1347:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1356:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1359:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1349:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1349:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1349:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1322:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1331:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1318:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1318:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1343:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1314:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1314:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1311:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1373:220:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1388:45:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1419:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1430:1:4",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1415:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1415:17:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1402:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1402:31:4"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1392:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1480:16:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1489:1:4",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1492:1:4",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1482:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1482:12:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1482:12:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1452:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1460:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1449:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1449:30:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1446:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1510:73:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1555:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1566:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1551:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1551:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1575:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1520:30:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1520:63:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1510:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1603:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1618:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1632:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1622:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1648:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1683:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1694:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1679:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1679:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1703:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1658:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1658:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1648:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1263:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1274:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1286:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1294:6:4",
                "type": ""
              }
            ],
            "src": "1208:520:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1800:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1846:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1855:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1858:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1848:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1848:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1848:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1821:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1830:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1817:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1817:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1842:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1813:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1810:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1872:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1887:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1901:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1891:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1916:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1951:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1962:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1947:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1947:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1971:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1926:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1916:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1770:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1781:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1793:6:4",
                "type": ""
              }
            ],
            "src": "1734:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2085:324:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2131:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2140:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2143:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2133:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2133:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2133:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2106:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2115:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2127:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2098:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2095:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2157:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2172:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2186:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2176:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2201:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2236:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2247:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2232:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2232:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2256:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2211:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2211:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2201:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2284:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2299:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2313:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2303:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2329:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2364:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2375:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2360:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2360:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2384:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2339:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2339:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2329:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2047:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2058:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2070:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2078:6:4",
                "type": ""
              }
            ],
            "src": "2002:407:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2496:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2513:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2544:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2518:25:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2518:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2506:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2506:45:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2506:45:4"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2484:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2491:3:4",
                "type": ""
              }
            ],
            "src": "2415:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2628:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2645:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2668:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2650:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2650:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2638:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2638:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2616:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2623:3:4",
                "type": ""
              }
            ],
            "src": "2563:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2746:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2763:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2783:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2768:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2768:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2756:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2756:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2734:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2741:3:4",
                "type": ""
              }
            ],
            "src": "2687:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2874:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2891:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2934:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$143_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2896:37:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2896:44:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2884:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2884:57:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2884:57:4"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$143_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2862:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2869:3:4",
                "type": ""
              }
            ],
            "src": "2802:145:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3045:272:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3055:53:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3102:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3069:32:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3069:39:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3059:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3117:78:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3183:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3188:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3124:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3124:71:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3117:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3230:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3237:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:16:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3244:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3249:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3204:21:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:52:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3204:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3265:46:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3276:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3303:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3281:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3281:29:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3272:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3272:39:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3265:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3026:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3033:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3041:3:4",
                "type": ""
              }
            ],
            "src": "2953:364:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3469:224:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3479:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3545:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3550:2:4",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3486:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3479:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3574:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3579:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3570:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3570:11:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3583:34:4",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3563:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3563:55:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3563:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3639:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3644:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3635:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:12:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3649:8:4",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:30:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3668:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3679:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3684:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3675:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3675:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3668:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3457:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3465:3:4",
                "type": ""
              }
            ],
            "src": "3323:370:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3845:184:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3855:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3921:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3926:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3862:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3862:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3855:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3950:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3955:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3946:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3946:11:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3959:34:4",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3939:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3939:55:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3939:55:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4004:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4015:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4020:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4011:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4011:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4004:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3833:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3841:3:4",
                "type": ""
              }
            ],
            "src": "3699:330:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4100:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4117:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4140:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4122:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4122:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4110:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4110:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4088:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4095:3:4",
                "type": ""
              }
            ],
            "src": "4035:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4257:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4267:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4279:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4290:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4275:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4275:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4267:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4347:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4360:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4371:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4356:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4356:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4303:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4303:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4303:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4229:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4241:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4252:4:4",
                "type": ""
              }
            ],
            "src": "4159:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4479:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4489:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4501:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4512:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4497:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4489:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4563:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4576:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4587:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4572:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4572:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4525:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4525:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4451:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4463:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4474:4:4",
                "type": ""
              }
            ],
            "src": "4387:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4972:829:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4982:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4994:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5005:3:4",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4990:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4990:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4982:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5049:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5055:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5045:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5045:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5075:86:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5147:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5156:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5083:63:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5083:78:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5075:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5215:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5228:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5239:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5224:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5224:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5171:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5171:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5171:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5297:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5310:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5321:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5306:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5306:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5253:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5253:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5253:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5379:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5392:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5403:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5388:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5388:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5335:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5335:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5335:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5468:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5481:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5492:3:4",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5477:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5477:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$143_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5417:50:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:80:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5417:80:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5567:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5580:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5591:3:4",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5576:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5576:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5507:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:89:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5507:89:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "5666:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5679:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5690:3:4",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5675:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5675:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5606:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5606:89:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5606:89:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "5765:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5778:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5789:3:4",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5774:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5774:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5705:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5705:89:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5705:89:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_enum$_State_$143_t_address_payable_t_address_payable_t_address_payable__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_address_payable_t_address_payable_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4888:9:4",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4900:6:4",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4908:6:4",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4916:6:4",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4924:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4932:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4940:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4948:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4956:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4967:4:4",
                "type": ""
              }
            ],
            "src": "4603:1198:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5978:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5988:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6000:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6011:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5996:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5996:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5988:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6035:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6046:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6031:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6031:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6054:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6060:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6050:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6050:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6024:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6024:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6024:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6080:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6214:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6088:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6088:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6080:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5958:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5973:4:4",
                "type": ""
              }
            ],
            "src": "5807:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6403:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6413:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6425:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6436:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6421:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6413:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6460:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6471:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6456:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6456:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6479:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6485:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6475:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6475:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6449:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6449:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6449:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6505:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6639:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6513:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6513:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6505:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6383:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6398:4:4",
                "type": ""
              }
            ],
            "src": "6232:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6755:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6765:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6777:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6788:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6773:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6773:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6765:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6845:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6858:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6869:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6854:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6854:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6801:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6801:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6727:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6739:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6750:4:4",
                "type": ""
              }
            ],
            "src": "6657:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6925:243:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6935:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6951:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6945:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6945:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6935:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6963:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6985:6:4"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6993:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6981:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6981:17:4"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "6967:10:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7109:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7111:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7111:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7111:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7052:10:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7064:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7049:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7049:34:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7088:10:4"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7100:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7085:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7085:22:4"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7046:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7046:62:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7043:2:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7147:2:4",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7151:10:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7140:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7140:22:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7140:22:4"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6909:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6918:6:4",
                "type": ""
              }
            ],
            "src": "6885:283:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7241:265:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7346:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7348:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7348:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7348:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7318:6:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7326:18:4",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7315:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7315:30:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7312:2:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7398:41:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7414:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7422:4:4",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7410:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7410:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7433:4:4",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7429:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7429:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7406:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7406:33:4"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7398:4:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7476:23:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7488:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7494:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7484:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7484:15:4"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7476:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7225:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7236:4:4",
                "type": ""
              }
            ],
            "src": "7174:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7571:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7582:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7598:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7592:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7592:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7582:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7554:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7564:6:4",
                "type": ""
              }
            ],
            "src": "7512:99:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7713:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7730:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7735:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7723:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7723:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7723:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7751:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7770:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7775:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7766:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7766:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7751:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7685:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7690:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7701:11:4",
                "type": ""
              }
            ],
            "src": "7617:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7836:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7846:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7869:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7851:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7851:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7846:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7880:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7903:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7885:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7880:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8043:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8045:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8045:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8045:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7964:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7971:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8039:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7967:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7967:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7961:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7961:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7958:2:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8075:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8086:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8089:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8082:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8082:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8075:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7823:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7826:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7832:3:4",
                "type": ""
              }
            ],
            "src": "7792:305:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8148:146:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8158:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8181:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8163:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8163:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8158:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8192:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8215:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8197:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8197:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8192:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8239:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8241:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8241:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8241:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8233:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8236:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8230:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8230:8:4"
                  },
                  "nodeType": "YulIf",
                  "src": "8227:2:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8271:17:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8283:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8286:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8279:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8279:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8271:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8134:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8137:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8143:4:4",
                "type": ""
              }
            ],
            "src": "8103:191:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8345:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8355:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8384:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8366:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8366:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8355:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8327:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8337:7:4",
                "type": ""
              }
            ],
            "src": "8300:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8455:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8465:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8494:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8476:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8476:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8465:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8437:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8447:7:4",
                "type": ""
              }
            ],
            "src": "8402:104:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8554:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8564:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8589:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8582:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8582:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8575:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8575:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8564:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8536:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8546:7:4",
                "type": ""
              }
            ],
            "src": "8512:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8662:75:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8672:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8683:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8672:7:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8725:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$143",
                      "nodeType": "YulIdentifier",
                      "src": "8689:35:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8689:42:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8689:42:4"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$143",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8644:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8654:7:4",
                "type": ""
              }
            ],
            "src": "8608:129:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8788:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8798:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8813:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8820:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8809:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8809:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8798:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8770:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8780:7:4",
                "type": ""
              }
            ],
            "src": "8743:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8920:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8930:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8941:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8930:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8902:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8912:7:4",
                "type": ""
              }
            ],
            "src": "8875:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9025:62:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9035:46:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9075:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$143",
                      "nodeType": "YulIdentifier",
                      "src": "9048:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9048:33:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9035:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$143_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9005:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9015:9:4",
                "type": ""
              }
            ],
            "src": "8958:129:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:103:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9167:3:4"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "9172:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9177:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "9154:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9154:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9154:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "9225:3:4"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9230:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9221:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9221:16:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9239:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9214:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:27:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9214:27:4"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9126:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9131:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9136:6:4",
                "type": ""
              }
            ],
            "src": "9093:154:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9302:258:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9312:10:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9321:1:4",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9316:1:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9381:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9406:3:4"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9411:1:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9402:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9402:11:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9425:3:4"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9430:1:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9421:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9421:11:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9415:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9415:18:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9395:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9395:39:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9395:39:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9342:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9345:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9339:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9339:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9353:19:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9355:15:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9364:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9367:2:4",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9360:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9360:10:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9355:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9335:3:4",
                    "statements": []
                  },
                  "src": "9331:113:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9478:76:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9528:3:4"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9533:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9524:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9524:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9542:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9517:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9517:27:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9517:27:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9459:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9462:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9456:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9456:13:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9453:2:4"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9284:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9289:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9294:6:4",
                "type": ""
              }
            ],
            "src": "9253:307:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9617:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9627:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9641:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9647:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9637:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9627:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9658:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9688:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9694:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9684:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9684:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9662:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9735:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9749:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9763:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9771:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9759:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9759:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9749:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9715:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9708:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9708:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9705:2:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9838:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "9852:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9852:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9852:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9802:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9825:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9833:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9822:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9822:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9799:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9799:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9796:2:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9601:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9610:6:4",
                "type": ""
              }
            ],
            "src": "9566:320:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9920:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9937:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9940:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9930:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9930:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9930:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10034:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10037:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10027:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10027:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10027:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10058:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10061:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10051:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10051:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10051:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9892:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10106:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10123:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10126:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10116:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10116:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10116:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10220:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10223:4:4",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10213:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10213:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10213:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10244:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10247:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10237:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10237:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10237:15:4"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "10078:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10292:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10309:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10312:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10302:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10302:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10302:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10406:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10409:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10399:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10399:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10399:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10430:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10433:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10423:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10423:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10423:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10264:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10478:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10495:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10498:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10488:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10488:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10488:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10592:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10595:4:4",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10585:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10585:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10585:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10616:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10619:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10609:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10609:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10609:15:4"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "10450:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10684:54:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10694:38:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10712:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10719:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10708:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10708:14:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10728:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10724:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10724:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10704:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10704:28:4"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "10694:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10667:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10677:6:4",
                "type": ""
              }
            ],
            "src": "10636:102:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10796:62:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10830:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "10832:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10832:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10832:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10819:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10826:1:4",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10816:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10816:12:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10809:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10809:20:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10806:2:4"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$143",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10789:5:4",
                "type": ""
              }
            ],
            "src": "10744:114:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10907:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10964:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10973:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10976:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10966:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10966:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10966:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10930:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10955:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10937:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10937:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10927:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10927:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10920:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10920:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10917:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10900:5:4",
                "type": ""
              }
            ],
            "src": "10864:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11035:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11092:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11101:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11104:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11094:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11094:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11094:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11058:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11083:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11065:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11065:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11055:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11055:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11048:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11048:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "11045:2:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11028:5:4",
                "type": ""
              }
            ],
            "src": "10992:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_State_$143_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$143_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_enum$_State_$143_t_address_payable_t_address_payable_t_address_payable__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_address_payable_t_address_payable_t_address_payable__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_State_$143_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_State_$143(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$143(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_State_$143_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$143(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_State_$143(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "351:4169:2:-:0;;;3107:99;;;;;;;;;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;3198:1:2;3187:8;:12;;;;351:4169;;587:96:1;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;351:4169:2:-;;;;;;;",
  "deployedSourceMap": "351:4169:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;:::-;;973:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:322:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3338:583;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4255:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1846:189:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;453:20:2;;;;:::o;484:37::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;3927:322:2:-;3994:3;2674:13;2652:35;;;;;;;;;;;;;;;;:6;:12;2659:4;2652:12;;;;;;;;;;;:18;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;:65;;;;;2716:1;2691:6;:12;2698:4;2691:12;;;;;;;;;;;:22;;;:26;2652:65;2644:74;;;;;;4010:3:::1;1460:6;:12;1467:4;1460:12;;;;;;;;;;;:22;;;1447:9;:35;;1439:44;;;::::0;::::1;;4026:3:::2;4070:10:::3;4037:6;:11;4044:3;4037:11;;;;;;;;;;;:22;;;:44;;;;;;;;;;;;;;;;;;4107:13;4087:6;:11;4094:3;4087:11;;;;;;;;;;;:17;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4126:6;:11;4133:3;4126:11;;;;;;;;;;;:18;;;;;;;;;;;;:27;;:50;4154:6;:11;4161:3;4154:11;;;;;;;;;;;:21;;;4126:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;4206:10;4182:6;:11;4189:3;4182:11;;;;;;;;;;;:21;;:34;;;;4227:15;4238:3;4227:15;;;;;;:::i;:::-;;;;;;;;1833::::2;1851:6;:12;1858:4;1851:12;;;;;;;;;;;:22;;;1833:40;;1883:19;1917:10;1905:9;:22;;;;:::i;:::-;1883:44;;1937:6;:12;1944:4;1937:12;;;;;;;;;;;:23;;;;;;;;;;;;:32;;:48;1970:14;1937:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1494:1;;;2728::::1;3927:322:::0;;;:::o;3338:583::-;3430:4;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3507:227:2::1;;;;;;;;3525:5;3507:227;;;;3542:8;;3507:227;;;;3568:10;3507:227;;;;3596:1;3507:227;;;;3610:13;3507:227;;;;;;;;;;;;;;;;;;;;3646:10;3507:227;;;;;;3691:1;3507:227;;;;;;3724:1;3507:227;;;;::::0;3488:6:::1;:16;3495:8;;3488:16;;;;;;;;;;;:246;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:1;3791:8:::0;::::1;:12;;;;:::i;:::-;3780:8;:23;;;;3851:24;3873:1;3862:8:::0;::::1;:12;;;;:::i;:::-;3851:24;;;;;;:::i;:::-;;;;;;;;3910:4;3903:11;;3338:583:::0;;;;:::o;4255:263::-;4306:3;2870:13;2848:35;;;;;;;;;;;;;;;;:6;:12;2855:4;2848:12;;;;;;;;;;;:18;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;:65;;;;;2912:1;2887:6;:12;2894:4;2887:12;;;;;;;;;;;:22;;;:26;2848:65;2840:74;;;;;;4326:3:::1;1639:6;:12;1646:4;1639:12;;;;;;;;;;;:22;;;1626:9;:35;;1618:44;;;::::0;::::1;;4341:3:::2;4381:10:::3;4352:6;:11;4359:3;4352:11;;;;;;;;;;;:18;;;:40;;;;;;;;;;;;;;;;;;4418:10;4398:6:::0;:11:::3;4405:3;4398:11;;;;;;;;;;;:17;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4434:6;:11;4441:3;4434:11;;;;;;;;;;;:22;;;;;;;;;;;;:31;;:54;4466:6;:11;4473:3;4466:11;;;;;;;;;;;:21;;;4434:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;4499:12;4507:3;4499:12;;;;;;:::i;:::-;;;;;;;;2262:15:::2;2280:6;:12;2287:4;2280:12;;;;;;;;;;;:22;;;2262:40;;2312:19;2346:10;2334:9;:22;;;;:::i;:::-;2312:44;;2366:6;:12;2373:4;2366:12;;;;;;;;;;;:19;;;;;;;;;;;;:28;;:44;2395:14;2366:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1672:1;;;2924::::1;4255:263:::0;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:1:-;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:4:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;795:139::-;;879:6;866:20;857:29;;895:33;922:5;895:33;:::i;:::-;847:87;;;;:::o;940:262::-;;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1064:1;1061;1054:12;1016:2;1107:1;1132:53;1177:7;1168:6;1157:9;1153:22;1132:53;:::i;:::-;1122:63;;1078:117;1006:196;;;;:::o;1208:520::-;;;1343:2;1331:9;1322:7;1318:23;1314:32;1311:2;;;1359:1;1356;1349:12;1311:2;1430:1;1419:9;1415:17;1402:31;1460:18;1452:6;1449:30;1446:2;;;1492:1;1489;1482:12;1446:2;1520:63;1575:7;1566:6;1555:9;1551:22;1520:63;:::i;:::-;1510:73;;1373:220;1632:2;1658:53;1703:7;1694:6;1683:9;1679:22;1658:53;:::i;:::-;1648:63;;1603:118;1301:427;;;;;:::o;1734:262::-;;1842:2;1830:9;1821:7;1817:23;1813:32;1810:2;;;1858:1;1855;1848:12;1810:2;1901:1;1926:53;1971:7;1962:6;1951:9;1947:22;1926:53;:::i;:::-;1916:63;;1872:117;1800:196;;;;:::o;2002:407::-;;;2127:2;2115:9;2106:7;2102:23;2098:32;2095:2;;;2143:1;2140;2133:12;2095:2;2186:1;2211:53;2256:7;2247:6;2236:9;2232:22;2211:53;:::i;:::-;2201:63;;2157:117;2313:2;2339:53;2384:7;2375:6;2364:9;2360:22;2339:53;:::i;:::-;2329:63;;2284:118;2085:324;;;;;:::o;2415:142::-;2518:32;2544:5;2518:32;:::i;:::-;2513:3;2506:45;2496:61;;:::o;2563:118::-;2650:24;2668:5;2650:24;:::i;:::-;2645:3;2638:37;2628:53;;:::o;2687:109::-;2768:21;2783:5;2768:21;:::i;:::-;2763:3;2756:34;2746:50;;:::o;2802:145::-;2896:44;2934:5;2896:44;:::i;:::-;2891:3;2884:57;2874:73;;:::o;2953:364::-;;3069:39;3102:5;3069:39;:::i;:::-;3124:71;3188:6;3183:3;3124:71;:::i;:::-;3117:78;;3204:52;3249:6;3244:3;3237:4;3230:5;3226:16;3204:52;:::i;:::-;3281:29;3303:6;3281:29;:::i;:::-;3276:3;3272:39;3265:46;;3045:272;;;;;:::o;3323:370::-;;3486:67;3550:2;3545:3;3486:67;:::i;:::-;3479:74;;3583:34;3579:1;3574:3;3570:11;3563:55;3649:8;3644:2;3639:3;3635:12;3628:30;3684:2;3679:3;3675:12;3668:19;;3469:224;;;:::o;3699:330::-;;3862:67;3926:2;3921:3;3862:67;:::i;:::-;3855:74;;3959:34;3955:1;3950:3;3946:11;3939:55;4020:2;4015:3;4011:12;4004:19;;3845:184;;;:::o;4035:118::-;4122:24;4140:5;4122:24;:::i;:::-;4117:3;4110:37;4100:53;;:::o;4159:222::-;;4290:2;4279:9;4275:18;4267:26;;4303:71;4371:1;4360:9;4356:17;4347:6;4303:71;:::i;:::-;4257:124;;;;:::o;4387:210::-;;4512:2;4501:9;4497:18;4489:26;;4525:65;4587:1;4576:9;4572:17;4563:6;4525:65;:::i;:::-;4479:118;;;;:::o;4603:1198::-;;5005:3;4994:9;4990:19;4982:27;;5055:9;5049:4;5045:20;5041:1;5030:9;5026:17;5019:47;5083:78;5156:4;5147:6;5083:78;:::i;:::-;5075:86;;5171:72;5239:2;5228:9;5224:18;5215:6;5171:72;:::i;:::-;5253;5321:2;5310:9;5306:18;5297:6;5253:72;:::i;:::-;5335;5403:2;5392:9;5388:18;5379:6;5335:72;:::i;:::-;5417:80;5492:3;5481:9;5477:19;5468:6;5417:80;:::i;:::-;5507:89;5591:3;5580:9;5576:19;5567:6;5507:89;:::i;:::-;5606;5690:3;5679:9;5675:19;5666:6;5606:89;:::i;:::-;5705;5789:3;5778:9;5774:19;5765:6;5705:89;:::i;:::-;4972:829;;;;;;;;;;;:::o;5807:419::-;;6011:2;6000:9;5996:18;5988:26;;6060:9;6054:4;6050:20;6046:1;6035:9;6031:17;6024:47;6088:131;6214:4;6088:131;:::i;:::-;6080:139;;5978:248;;;:::o;6232:419::-;;6436:2;6425:9;6421:18;6413:26;;6485:9;6479:4;6475:20;6471:1;6460:9;6456:17;6449:47;6513:131;6639:4;6513:131;:::i;:::-;6505:139;;6403:248;;;:::o;6657:222::-;;6788:2;6777:9;6773:18;6765:26;;6801:71;6869:1;6858:9;6854:17;6845:6;6801:71;:::i;:::-;6755:124;;;;:::o;6885:283::-;;6951:2;6945:9;6935:19;;6993:4;6985:6;6981:17;7100:6;7088:10;7085:22;7064:18;7052:10;7049:34;7046:62;7043:2;;;7111:18;;:::i;:::-;7043:2;7151:10;7147:2;7140:22;6925:243;;;;:::o;7174:332::-;;7326:18;7318:6;7315:30;7312:2;;;7348:18;;:::i;:::-;7312:2;7433:4;7429:9;7422:4;7414:6;7410:17;7406:33;7398:41;;7494:4;7488;7484:15;7476:23;;7241:265;;;:::o;7512:99::-;;7598:5;7592:12;7582:22;;7571:40;;;:::o;7617:169::-;;7735:6;7730:3;7723:19;7775:4;7770:3;7766:14;7751:29;;7713:73;;;;:::o;7792:305::-;;7851:20;7869:1;7851:20;:::i;:::-;7846:25;;7885:20;7903:1;7885:20;:::i;:::-;7880:25;;8039:1;7971:66;7967:74;7964:1;7961:81;7958:2;;;8045:18;;:::i;:::-;7958:2;8089:1;8086;8082:9;8075:16;;7836:261;;;;:::o;8103:191::-;;8163:20;8181:1;8163:20;:::i;:::-;8158:25;;8197:20;8215:1;8197:20;:::i;:::-;8192:25;;8236:1;8233;8230:8;8227:2;;;8241:18;;:::i;:::-;8227:2;8286:1;8283;8279:9;8271:17;;8148:146;;;;:::o;8300:96::-;;8366:24;8384:5;8366:24;:::i;:::-;8355:35;;8345:51;;;:::o;8402:104::-;;8476:24;8494:5;8476:24;:::i;:::-;8465:35;;8455:51;;;:::o;8512:90::-;;8589:5;8582:13;8575:21;8564:32;;8554:48;;;:::o;8608:129::-;;8683:5;8672:16;;8689:42;8725:5;8689:42;:::i;:::-;8662:75;;;:::o;8743:126::-;;8820:42;8813:5;8809:54;8798:65;;8788:81;;;:::o;8875:77::-;;8941:5;8930:16;;8920:32;;;:::o;8958:129::-;;9048:33;9075:5;9048:33;:::i;:::-;9035:46;;9025:62;;;:::o;9093:154::-;9177:6;9172:3;9167;9154:30;9239:1;9230:6;9225:3;9221:16;9214:27;9144:103;;;:::o;9253:307::-;9321:1;9331:113;9345:6;9342:1;9339:13;9331:113;;;9430:1;9425:3;9421:11;9415:18;9411:1;9406:3;9402:11;9395:39;9367:2;9364:1;9360:10;9355:15;;9331:113;;;9462:6;9459:1;9456:13;9453:2;;;9542:1;9533:6;9528:3;9524:16;9517:27;9453:2;9302:258;;;;:::o;9566:320::-;;9647:1;9641:4;9637:12;9627:22;;9694:1;9688:4;9684:12;9715:18;9705:2;;9771:4;9763:6;9759:17;9749:27;;9705:2;9833;9825:6;9822:14;9802:18;9799:38;9796:2;;;9852:18;;:::i;:::-;9796:2;9617:269;;;;:::o;9892:180::-;9940:77;9937:1;9930:88;10037:4;10034:1;10027:15;10061:4;10058:1;10051:15;10078:180;10126:77;10123:1;10116:88;10223:4;10220:1;10213:15;10247:4;10244:1;10237:15;10264:180;10312:77;10309:1;10302:88;10409:4;10406:1;10399:15;10433:4;10430:1;10423:15;10450:180;10498:77;10495:1;10488:88;10595:4;10592:1;10585:15;10619:4;10616:1;10609:15;10636:102;;10728:2;10724:7;10719:2;10712:5;10708:14;10704:28;10694:38;;10684:54;;;:::o;10744:114::-;10826:1;10819:5;10816:12;10806:2;;10832:18;;:::i;:::-;10806:2;10796:62;:::o;10864:122::-;10937:24;10955:5;10937:24;:::i;:::-;10930:5;10927:35;10917:2;;10976:1;10973;10966:12;10917:2;10907:79;:::o;10992:122::-;11065:24;11083:5;11065:24;:::i;:::-;11058:5;11055:35;11045:2;;11104:1;11101;11094:12;11045:2;11035:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\n/// @dev Import Ownable from the OpenZeppelin Contracts library\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title A sample of Apartment Marketplace\n/// @author Laura Shi\n/// @notice You can use this contract to stimuate on chain apartment purchasing and renting function\ncontract ApartmentMarket is Ownable {\n\n    /// @dev skuCount Number of apartments in the contract\n    uint public skuCount;\n    \n    mapping (uint => House) public Houses;\n    /// <enum State: ForSale, ForRent, Rent>\n    enum State { ForSale, ForRent, Rent }\n    /// @dev struct House: name, sku, sellprice, rentprice, state, houseowner, and renter\n    struct House {\n        string name;\n        uint sku;\n        uint sellprice;\n        uint rentprice;\n        State state;\n        address payable seller;\n        address payable houseowner;\n        address payable renter;\n        /// TypeError: \"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".\n    }\n    \n    /** \n    Events\n    */\n\n    /// @dev <LogForSale event: sku arg>\n    event LogForSale(uint sku);\n    /// @dev <LogForRent event: sku arg>\n    event LogForRent(uint sku);\n    /// @dev <LogRent event: sku arg>\n    event LogRent(uint sku);\n\n    /** \n    Modifiers\n    */\n    /// @dev check if the purchase message contains enough value\n    modifier paidEnough(uint _sku) { \n        require(msg.value >= Houses[_sku].sellprice); \n        _;\n    }\n    \n    /// @dev cehck if the rent message contains enough value\n    modifier rentpaidEnough(uint _sku) {\n        require(msg.value >= Houses[_sku].rentprice);\n        _;\n    }\n    \n    /// @dev refund them after purchase (why it is before, _ checks for logic before func)\n    modifier checkValue(uint _sku) {\n        _;\n        uint _sellprice = Houses[_sku].sellprice;\n        uint amountToRefund = msg.value - _sellprice;\n        Houses[_sku].houseowner.transfer(amountToRefund);\n        /// TypeError: \"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".\n    }\n\n    /// @dev refund them after rent (why it is before, _ checks for logic before func)        \n    modifier checkRent(uint _sku) {\n        _;\n        uint _rentprice = Houses[_sku].rentprice;\n        uint amountToRefund = msg.value - _rentprice;\n        Houses[_sku].renter.transfer(amountToRefund);\n        /// TypeError: \"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".\n    }\n    \n    /// @dev check if the state of the apartment is for sale\n    modifier forSale(uint _sku) {\n        require(Houses[_sku].state == State.ForSale && Houses[_sku].sellprice > 0);\n        _;\n    }\n    /// @dev check if the state of the apartment is for rent\n    modifier forRent(uint _sku) {\n        require(Houses[_sku].state == State.ForRent && Houses[_sku].rentprice > 0);\n        _;\n    }\n\n    /// @dev check if the state of the apartment is rent already\n    modifier Rent(uint _sku) {\n        require(Houses[_sku].state == State.Rent);\n        _;\n    }\n    \n    constructor() public {\n        /// @dev Initialize the sku count to 0. \n        skuCount = 0;\n    }\n    /// @dev here you can set isOnwer modifier to allow only the contract owner to add apartment to the contract, if necessary\n    function addHouse(string memory _name, uint _sellprice) \n    public onlyOwner \n    returns (bool) {\n    // 1. Create a new House and put in array\n    Houses[skuCount] = House({\n    name: _name, \n    sku: skuCount, \n    sellprice: _sellprice, \n    rentprice: 0,\n    state: State.ForSale, \n    seller: payable(msg.sender),\n    houseowner: payable(address(0)),\n    renter: payable(address(0))\n    });\n    // 2. Increment the skuCount by one\n    skuCount = skuCount + 1;\n    // 3. Emit the appropriate event\n    emit LogForSale(skuCount - 1);\n    // 4. return true\n    return true;\n    }\n\n    function buyItem(uint sku, uint _rentprice) public payable forSale(sku) paidEnough(sku) checkValue(sku) {\n    Houses[sku].houseowner = payable(msg.sender);\n    Houses[sku].state = State.ForRent;\n    Houses[sku].seller.transfer(Houses[sku].sellprice);\n    Houses[sku].rentprice = _rentprice;\n    emit LogForRent(sku);\n    }\n\n    function rentItem(uint sku) public payable forRent(sku) rentpaidEnough(sku) checkRent(sku) {\n    Houses[sku].renter = payable(msg.sender);\n    Houses[sku].state = State.Rent;\n    Houses[sku].houseowner.transfer(Houses[sku].rentprice);\n    emit LogRent(sku);\n    }\n}\n",
  "sourcePath": "/Users/laurashi/cs/final-with-test/contracts/ApartmentMarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/ApartmentMarket.sol",
    "exportedSymbols": {
      "ApartmentMarket": [
        508
      ],
      "Context": [
        125
      ],
      "Ownable": [
        103
      ]
    },
    "id": 509,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 127,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 128,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 104,
        "src": "129:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 130,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "379:7:2"
            },
            "id": 131,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:2"
          }
        ],
        "contractDependencies": [
          103,
          125
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 129,
          "nodeType": "StructuredDocumentation",
          "src": "183:168:2",
          "text": "@title A sample of Apartment Marketplace\n @author Laura Shi\n @notice You can use this contract to stimuate on chain apartment purchasing and renting function"
        },
        "fullyImplemented": true,
        "id": 508,
        "linearizedBaseContracts": [
          508,
          103,
          125
        ],
        "name": "ApartmentMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "394:54:2",
              "text": "@dev skuCount Number of apartments in the contract"
            },
            "functionSelector": "22702473",
            "id": 134,
            "mutability": "mutable",
            "name": "skuCount",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "453:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 133,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "453:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ea8fd72",
            "id": 139,
            "mutability": "mutable",
            "name": "Houses",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "484:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
              "typeString": "mapping(uint256 => struct ApartmentMarket.House)"
            },
            "typeName": {
              "id": 138,
              "keyType": {
                "id": 135,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "493:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "484:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                "typeString": "mapping(uint256 => struct ApartmentMarket.House)"
              },
              "valueType": {
                "id": 137,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 136,
                  "name": "House",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161,
                  "src": "501:5:2"
                },
                "referencedDeclaration": 161,
                "src": "501:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_House_$161_storage_ptr",
                  "typeString": "struct ApartmentMarket.House"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ApartmentMarket.State",
            "id": 143,
            "members": [
              {
                "id": 140,
                "name": "ForSale",
                "nodeType": "EnumValue",
                "src": "585:7:2"
              },
              {
                "id": 141,
                "name": "ForRent",
                "nodeType": "EnumValue",
                "src": "594:7:2"
              },
              {
                "id": 142,
                "name": "Rent",
                "nodeType": "EnumValue",
                "src": "603:4:2"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "572:37:2"
          },
          {
            "canonicalName": "ApartmentMarket.House",
            "id": 161,
            "members": [
              {
                "constant": false,
                "id": 145,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "727:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 144,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "727:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 147,
                "mutability": "mutable",
                "name": "sku",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "748:8:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 146,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "748:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 149,
                "mutability": "mutable",
                "name": "sellprice",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "766:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 148,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "766:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 151,
                "mutability": "mutable",
                "name": "rentprice",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "790:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 150,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "790:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 154,
                "mutability": "mutable",
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "814:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$143",
                  "typeString": "enum ApartmentMarket.State"
                },
                "typeName": {
                  "id": 153,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 152,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 143,
                    "src": "814:5:2"
                  },
                  "referencedDeclaration": 143,
                  "src": "814:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$143",
                    "typeString": "enum ApartmentMarket.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 156,
                "mutability": "mutable",
                "name": "seller",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "835:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 155,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "835:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 158,
                "mutability": "mutable",
                "name": "houseowner",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "867:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 157,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "867:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 160,
                "mutability": "mutable",
                "name": "renter",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "903:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 159,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "903:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "House",
            "nodeType": "StructDefinition",
            "scope": 508,
            "src": "704:346:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "1088:36:2",
              "text": "@dev <LogForSale event: sku arg>"
            },
            "id": 166,
            "name": "LogForSale",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1146:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1145:10:2"
            },
            "src": "1129:27:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "1161:36:2",
              "text": "@dev <LogForRent event: sku arg>"
            },
            "id": 171,
            "name": "LogForRent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1219:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:10:2"
            },
            "src": "1202:27:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "1234:33:2",
              "text": "@dev <LogRent event: sku arg>"
            },
            "id": 176,
            "name": "LogRent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1286:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:10:2"
            },
            "src": "1272:24:2"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1428:74:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1447:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1447:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 184,
                              "name": "Houses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1460:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                              }
                            },
                            "id": 186,
                            "indexExpression": {
                              "id": 185,
                              "name": "_sku",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "1467:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1460:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_House_$161_storage",
                              "typeString": "struct ApartmentMarket.House storage ref"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 149,
                          "src": "1460:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1447:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1439:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:44:2"
                },
                {
                  "id": 191,
                  "nodeType": "PlaceholderStatement",
                  "src": "1494:1:2"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "1332:60:2",
              "text": "@dev check if the purchase message contains enough value"
            },
            "id": 193,
            "name": "paidEnough",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1417:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:11:2"
            },
            "src": "1397:105:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1608:72:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 199,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1626:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1626:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 201,
                              "name": "Houses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1639:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                              }
                            },
                            "id": 203,
                            "indexExpression": {
                              "id": 202,
                              "name": "_sku",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "1646:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1639:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_House_$161_storage",
                              "typeString": "struct ApartmentMarket.House storage ref"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 151,
                          "src": "1639:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1626:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1618:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:44:2"
                },
                {
                  "id": 208,
                  "nodeType": "PlaceholderStatement",
                  "src": "1672:1:2"
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "1512:56:2",
              "text": "@dev cehck if the rent message contains enough value"
            },
            "id": 210,
            "name": "rentpaidEnough",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "1597:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:11:2"
            },
            "src": "1573:107:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "1812:298:2",
              "statements": [
                {
                  "id": 215,
                  "nodeType": "PlaceholderStatement",
                  "src": "1822:1:2"
                },
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "_sellprice",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "1833:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1833:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 218,
                        "name": "Houses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1851:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                          "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 219,
                        "name": "_sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "1858:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1851:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_storage",
                        "typeString": "struct ApartmentMarket.House storage ref"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellprice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 149,
                    "src": "1851:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1833:40:2"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "amountToRefund",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "1883:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1883:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 225,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1905:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1905:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 227,
                      "name": "_sellprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "1917:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1905:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1883:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 235,
                        "name": "amountToRefund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "1970:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 230,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "1937:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "id": 231,
                            "name": "_sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "1944:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1937:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "houseowner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 158,
                        "src": "1937:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1937:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:48:2"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "1690:86:2",
              "text": "@dev refund them after purchase (why it is before, _ checks for logic before func)"
            },
            "id": 239,
            "name": "checkValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "1801:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1800:11:2"
            },
            "src": "1781:329:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "2241:294:2",
              "statements": [
                {
                  "id": 244,
                  "nodeType": "PlaceholderStatement",
                  "src": "2251:1:2"
                },
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "_rentprice",
                      "nodeType": "VariableDeclaration",
                      "scope": 267,
                      "src": "2262:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2262:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 251,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 247,
                        "name": "Houses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2280:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                          "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                        }
                      },
                      "id": 249,
                      "indexExpression": {
                        "id": 248,
                        "name": "_sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2287:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2280:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_storage",
                        "typeString": "struct ApartmentMarket.House storage ref"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rentprice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 151,
                    "src": "2280:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2262:40:2"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "amountToRefund",
                      "nodeType": "VariableDeclaration",
                      "scope": 267,
                      "src": "2312:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2312:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 254,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2334:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2334:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 256,
                      "name": "_rentprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "2346:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2334:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2312:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 264,
                        "name": "amountToRefund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2395:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 259,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2366:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 261,
                          "indexExpression": {
                            "id": 260,
                            "name": "_sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "2373:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2366:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 160,
                        "src": "2366:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2366:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:44:2"
                }
              ]
            },
            "documentation": {
              "id": 240,
              "nodeType": "StructuredDocumentation",
              "src": "2116:90:2",
              "text": "@dev refund them after rent (why it is before, _ checks for logic before func)        "
            },
            "id": 268,
            "name": "checkRent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "2230:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:11:2"
            },
            "src": "2211:324:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "2634:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 274,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2652:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 276,
                              "indexExpression": {
                                "id": 275,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "2659:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2652:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 154,
                            "src": "2652:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 278,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2674:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum ApartmentMarket.State)"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ForSale",
                            "nodeType": "MemberAccess",
                            "src": "2674:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "src": "2652:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 281,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2691:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 283,
                              "indexExpression": {
                                "id": 282,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "2698:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2691:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellprice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 149,
                            "src": "2691:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2716:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2691:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2652:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2644:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:74:2"
                },
                {
                  "id": 290,
                  "nodeType": "PlaceholderStatement",
                  "src": "2728:1:2"
                }
              ]
            },
            "documentation": {
              "id": 269,
              "nodeType": "StructuredDocumentation",
              "src": "2545:56:2",
              "text": "@dev check if the state of the apartment is for sale"
            },
            "id": 292,
            "name": "forSale",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "2623:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2622:11:2"
            },
            "src": "2606:130:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "2830:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 298,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2848:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 300,
                              "indexExpression": {
                                "id": 299,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "2855:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2848:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 154,
                            "src": "2848:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 302,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2870:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum ApartmentMarket.State)"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ForRent",
                            "nodeType": "MemberAccess",
                            "src": "2870:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "src": "2848:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 305,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2887:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 307,
                              "indexExpression": {
                                "id": 306,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "2894:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2887:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentprice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 151,
                            "src": "2887:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2912:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2887:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2848:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2840:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:74:2"
                },
                {
                  "id": 314,
                  "nodeType": "PlaceholderStatement",
                  "src": "2924:1:2"
                }
              ]
            },
            "documentation": {
              "id": 293,
              "nodeType": "StructuredDocumentation",
              "src": "2741:56:2",
              "text": "@dev check if the state of the apartment is for rent"
            },
            "id": 316,
            "name": "forRent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "2819:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:11:2"
            },
            "src": "2802:130:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "3028:69:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$143",
                          "typeString": "enum ApartmentMarket.State"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 322,
                              "name": "Houses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3046:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                              }
                            },
                            "id": 324,
                            "indexExpression": {
                              "id": 323,
                              "name": "_sku",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "3053:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3046:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_House_$161_storage",
                              "typeString": "struct ApartmentMarket.House storage ref"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 154,
                          "src": "3046:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 326,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "3068:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                              "typeString": "type(enum ApartmentMarket.State)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rent",
                          "nodeType": "MemberAccess",
                          "src": "3068:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          }
                        },
                        "src": "3046:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:41:2"
                },
                {
                  "id": 331,
                  "nodeType": "PlaceholderStatement",
                  "src": "3089:1:2"
                }
              ]
            },
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "2938:60:2",
              "text": "@dev check if the state of the apartment is rent already"
            },
            "id": 333,
            "name": "Rent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 333,
                  "src": "3017:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:11:2"
            },
            "src": "3003:94:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "3128:78:2",
              "statements": [
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 336,
                      "name": "skuCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3187:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3198:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3187:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3187:12:2"
                }
              ]
            },
            "id": 341,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3118:2:2"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3128:0:2"
            },
            "scope": 508,
            "src": "3107:99:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "3436:485:2",
              "statements": [
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 353,
                        "name": "Houses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3488:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                          "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                        }
                      },
                      "id": 355,
                      "indexExpression": {
                        "id": 354,
                        "name": "skuCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "3495:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3488:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_storage",
                        "typeString": "struct ApartmentMarket.House storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 357,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "3525:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 358,
                          "name": "skuCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "3542:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 359,
                          "name": "_sellprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "3568:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3596:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 361,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "3610:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                              "typeString": "type(enum ApartmentMarket.State)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForSale",
                          "nodeType": "MemberAccess",
                          "src": "3610:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3646:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3646:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3638:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3638:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3638:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3691:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3683:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 370,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3683:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3683:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3675:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3675:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3675:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3724:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3716:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 377,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3716:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3716:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3708:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 375,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3708:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3708:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 356,
                        "name": "House",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3507:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_House_$161_storage_ptr_$",
                          "typeString": "type(struct ApartmentMarket.House storage pointer)"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "name",
                        "sku",
                        "sellprice",
                        "rentprice",
                        "state",
                        "seller",
                        "houseowner",
                        "renter"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3507:227:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_memory_ptr",
                        "typeString": "struct ApartmentMarket.House memory"
                      }
                    },
                    "src": "3488:246:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_House_$161_storage",
                      "typeString": "struct ApartmentMarket.House storage ref"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:246:2"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 385,
                      "name": "skuCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3780:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 386,
                        "name": "skuCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "3791:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3791:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3780:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:23:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 392,
                          "name": "skuCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "3862:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3873:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3862:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 391,
                      "name": "LogForSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3851:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "EmitStatement",
                  "src": "3846:29:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3910:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 352,
                  "id": 398,
                  "nodeType": "Return",
                  "src": "3903:11:2"
                }
              ]
            },
            "documentation": {
              "id": 342,
              "nodeType": "StructuredDocumentation",
              "src": "3211:122:2",
              "text": "@dev here you can set isOnwer modifier to allow only the contract owner to add apartment to the contract, if necessary"
            },
            "functionSelector": "c88be663",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 349,
                "modifierName": {
                  "id": 348,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3406:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3406:9:2"
              }
            ],
            "name": "addHouse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3356:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "_sellprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3377:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3355:38:2"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3430:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3430:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3429:6:2"
            },
            "scope": 508,
            "src": "3338:583:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "4031:218:2",
              "statements": [
                {
                  "expression": {
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 416,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4037:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 418,
                        "indexExpression": {
                          "id": 417,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4044:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4037:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "houseowner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "4037:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4070:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4070:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4062:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4062:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4062:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4037:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:44:2"
                },
                {
                  "expression": {
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 427,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4087:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "id": 428,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4094:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4087:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154,
                      "src": "4087:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 431,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4107:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                          "typeString": "type(enum ApartmentMarket.State)"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForRent",
                      "nodeType": "MemberAccess",
                      "src": "4107:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "src": "4087:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum ApartmentMarket.State"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 440,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4154:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 442,
                          "indexExpression": {
                            "id": 441,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "4161:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4154:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 149,
                        "src": "4154:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 435,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4126:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "id": 436,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "4133:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4126:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 156,
                        "src": "4126:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4126:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:50:2"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 446,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4182:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "id": 447,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4189:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4182:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rentprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 151,
                      "src": "4182:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 450,
                      "name": "_rentprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "4206:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4182:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4182:34:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "4238:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 453,
                      "name": "LogForRent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "4227:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4227:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "EmitStatement",
                  "src": "4222:20:2"
                }
              ]
            },
            "functionSelector": "9979c009",
            "id": 458,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 407,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "3994:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 408,
                "modifierName": {
                  "id": 406,
                  "name": "forSale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 292,
                  "src": "3986:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3986:12:2"
              },
              {
                "arguments": [
                  {
                    "id": 410,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "4010:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 411,
                "modifierName": {
                  "id": 409,
                  "name": "paidEnough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 193,
                  "src": "3999:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3999:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 413,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "4026:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 414,
                "modifierName": {
                  "id": 412,
                  "name": "checkValue",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 239,
                  "src": "4015:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4015:15:2"
              }
            ],
            "name": "buyItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "3944:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3944:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "_rentprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "3954:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3943:27:2"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4031:0:2"
            },
            "scope": 508,
            "src": "3927:322:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "4346:172:2",
              "statements": [
                {
                  "expression": {
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 472,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4352:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 474,
                        "indexExpression": {
                          "id": 473,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "4359:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4352:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "renter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 160,
                      "src": "4352:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 478,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4381:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4381:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4373:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4373:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4373:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4352:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "4352:40:2"
                },
                {
                  "expression": {
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 483,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4398:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "id": 484,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "4405:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4398:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154,
                      "src": "4398:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 487,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4418:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                          "typeString": "type(enum ApartmentMarket.State)"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Rent",
                      "nodeType": "MemberAccess",
                      "src": "4418:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "src": "4398:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum ApartmentMarket.State"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "4398:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 496,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4466:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 498,
                          "indexExpression": {
                            "id": 497,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "4473:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4466:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 151,
                        "src": "4466:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4434:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "4441:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4434:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "houseowner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 158,
                        "src": "4434:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4434:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4434:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4434:54:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 503,
                        "name": "sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "4507:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 502,
                      "name": "LogRent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "4499:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "EmitStatement",
                  "src": "4494:17:2"
                }
              ]
            },
            "functionSelector": "d78d3852",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 463,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 460,
                    "src": "4306:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 464,
                "modifierName": {
                  "id": 462,
                  "name": "forRent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 316,
                  "src": "4298:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4298:12:2"
              },
              {
                "arguments": [
                  {
                    "id": 466,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 460,
                    "src": "4326:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 467,
                "modifierName": {
                  "id": 465,
                  "name": "rentpaidEnough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "4311:14:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4311:19:2"
              },
              {
                "arguments": [
                  {
                    "id": 469,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 460,
                    "src": "4341:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 470,
                "modifierName": {
                  "id": 468,
                  "name": "checkRent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "4331:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4331:14:2"
              }
            ],
            "name": "rentItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "4273:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4273:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4272:10:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4346:0:2"
            },
            "scope": 508,
            "src": "4255:263:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 509,
        "src": "351:4169:2"
      }
    ],
    "src": "32:4489:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ApartmentMarket.sol",
    "exportedSymbols": {
      "ApartmentMarket": [
        508
      ],
      "Context": [
        125
      ],
      "Ownable": [
        103
      ]
    },
    "id": 509,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 127,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 128,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 104,
        "src": "129:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 130,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "379:7:2"
            },
            "id": 131,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:2"
          }
        ],
        "contractDependencies": [
          103,
          125
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 129,
          "nodeType": "StructuredDocumentation",
          "src": "183:168:2",
          "text": "@title A sample of Apartment Marketplace\n @author Laura Shi\n @notice You can use this contract to stimuate on chain apartment purchasing and renting function"
        },
        "fullyImplemented": true,
        "id": 508,
        "linearizedBaseContracts": [
          508,
          103,
          125
        ],
        "name": "ApartmentMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "394:54:2",
              "text": "@dev skuCount Number of apartments in the contract"
            },
            "functionSelector": "22702473",
            "id": 134,
            "mutability": "mutable",
            "name": "skuCount",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "453:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 133,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "453:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ea8fd72",
            "id": 139,
            "mutability": "mutable",
            "name": "Houses",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "484:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
              "typeString": "mapping(uint256 => struct ApartmentMarket.House)"
            },
            "typeName": {
              "id": 138,
              "keyType": {
                "id": 135,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "493:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "484:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                "typeString": "mapping(uint256 => struct ApartmentMarket.House)"
              },
              "valueType": {
                "id": 137,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 136,
                  "name": "House",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161,
                  "src": "501:5:2"
                },
                "referencedDeclaration": 161,
                "src": "501:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_House_$161_storage_ptr",
                  "typeString": "struct ApartmentMarket.House"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ApartmentMarket.State",
            "id": 143,
            "members": [
              {
                "id": 140,
                "name": "ForSale",
                "nodeType": "EnumValue",
                "src": "585:7:2"
              },
              {
                "id": 141,
                "name": "ForRent",
                "nodeType": "EnumValue",
                "src": "594:7:2"
              },
              {
                "id": 142,
                "name": "Rent",
                "nodeType": "EnumValue",
                "src": "603:4:2"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "572:37:2"
          },
          {
            "canonicalName": "ApartmentMarket.House",
            "id": 161,
            "members": [
              {
                "constant": false,
                "id": 145,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "727:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 144,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "727:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 147,
                "mutability": "mutable",
                "name": "sku",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "748:8:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 146,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "748:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 149,
                "mutability": "mutable",
                "name": "sellprice",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "766:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 148,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "766:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 151,
                "mutability": "mutable",
                "name": "rentprice",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "790:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 150,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "790:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 154,
                "mutability": "mutable",
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "814:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$143",
                  "typeString": "enum ApartmentMarket.State"
                },
                "typeName": {
                  "id": 153,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 152,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 143,
                    "src": "814:5:2"
                  },
                  "referencedDeclaration": 143,
                  "src": "814:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$143",
                    "typeString": "enum ApartmentMarket.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 156,
                "mutability": "mutable",
                "name": "seller",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "835:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 155,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "835:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 158,
                "mutability": "mutable",
                "name": "houseowner",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "867:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 157,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "867:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 160,
                "mutability": "mutable",
                "name": "renter",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "903:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 159,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "903:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "House",
            "nodeType": "StructDefinition",
            "scope": 508,
            "src": "704:346:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "1088:36:2",
              "text": "@dev <LogForSale event: sku arg>"
            },
            "id": 166,
            "name": "LogForSale",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1146:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1145:10:2"
            },
            "src": "1129:27:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "1161:36:2",
              "text": "@dev <LogForRent event: sku arg>"
            },
            "id": 171,
            "name": "LogForRent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1219:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:10:2"
            },
            "src": "1202:27:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "1234:33:2",
              "text": "@dev <LogRent event: sku arg>"
            },
            "id": 176,
            "name": "LogRent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1286:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:10:2"
            },
            "src": "1272:24:2"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1428:74:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1447:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1447:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 184,
                              "name": "Houses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1460:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                              }
                            },
                            "id": 186,
                            "indexExpression": {
                              "id": 185,
                              "name": "_sku",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "1467:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1460:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_House_$161_storage",
                              "typeString": "struct ApartmentMarket.House storage ref"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 149,
                          "src": "1460:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1447:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1439:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:44:2"
                },
                {
                  "id": 191,
                  "nodeType": "PlaceholderStatement",
                  "src": "1494:1:2"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "1332:60:2",
              "text": "@dev check if the purchase message contains enough value"
            },
            "id": 193,
            "name": "paidEnough",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1417:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:11:2"
            },
            "src": "1397:105:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1608:72:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 199,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1626:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1626:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 201,
                              "name": "Houses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1639:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                              }
                            },
                            "id": 203,
                            "indexExpression": {
                              "id": 202,
                              "name": "_sku",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "1646:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1639:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_House_$161_storage",
                              "typeString": "struct ApartmentMarket.House storage ref"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 151,
                          "src": "1639:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1626:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1618:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:44:2"
                },
                {
                  "id": 208,
                  "nodeType": "PlaceholderStatement",
                  "src": "1672:1:2"
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "1512:56:2",
              "text": "@dev cehck if the rent message contains enough value"
            },
            "id": 210,
            "name": "rentpaidEnough",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "1597:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:11:2"
            },
            "src": "1573:107:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "1812:298:2",
              "statements": [
                {
                  "id": 215,
                  "nodeType": "PlaceholderStatement",
                  "src": "1822:1:2"
                },
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "_sellprice",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "1833:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1833:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 218,
                        "name": "Houses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1851:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                          "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 219,
                        "name": "_sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "1858:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1851:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_storage",
                        "typeString": "struct ApartmentMarket.House storage ref"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellprice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 149,
                    "src": "1851:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1833:40:2"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "amountToRefund",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "1883:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1883:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 225,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1905:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1905:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 227,
                      "name": "_sellprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "1917:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1905:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1883:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 235,
                        "name": "amountToRefund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "1970:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 230,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "1937:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "id": 231,
                            "name": "_sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "1944:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1937:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "houseowner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 158,
                        "src": "1937:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1937:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:48:2"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "1690:86:2",
              "text": "@dev refund them after purchase (why it is before, _ checks for logic before func)"
            },
            "id": 239,
            "name": "checkValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "1801:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1800:11:2"
            },
            "src": "1781:329:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "2241:294:2",
              "statements": [
                {
                  "id": 244,
                  "nodeType": "PlaceholderStatement",
                  "src": "2251:1:2"
                },
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "_rentprice",
                      "nodeType": "VariableDeclaration",
                      "scope": 267,
                      "src": "2262:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2262:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 251,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 247,
                        "name": "Houses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2280:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                          "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                        }
                      },
                      "id": 249,
                      "indexExpression": {
                        "id": 248,
                        "name": "_sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2287:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2280:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_storage",
                        "typeString": "struct ApartmentMarket.House storage ref"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rentprice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 151,
                    "src": "2280:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2262:40:2"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "amountToRefund",
                      "nodeType": "VariableDeclaration",
                      "scope": 267,
                      "src": "2312:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2312:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 254,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2334:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2334:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 256,
                      "name": "_rentprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "2346:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2334:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2312:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 264,
                        "name": "amountToRefund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2395:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 259,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2366:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 261,
                          "indexExpression": {
                            "id": 260,
                            "name": "_sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "2373:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2366:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 160,
                        "src": "2366:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2366:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:44:2"
                }
              ]
            },
            "documentation": {
              "id": 240,
              "nodeType": "StructuredDocumentation",
              "src": "2116:90:2",
              "text": "@dev refund them after rent (why it is before, _ checks for logic before func)        "
            },
            "id": 268,
            "name": "checkRent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "2230:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:11:2"
            },
            "src": "2211:324:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "2634:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 274,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2652:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 276,
                              "indexExpression": {
                                "id": 275,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "2659:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2652:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 154,
                            "src": "2652:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 278,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2674:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum ApartmentMarket.State)"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ForSale",
                            "nodeType": "MemberAccess",
                            "src": "2674:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "src": "2652:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 281,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2691:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 283,
                              "indexExpression": {
                                "id": 282,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "2698:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2691:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellprice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 149,
                            "src": "2691:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2716:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2691:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2652:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2644:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:74:2"
                },
                {
                  "id": 290,
                  "nodeType": "PlaceholderStatement",
                  "src": "2728:1:2"
                }
              ]
            },
            "documentation": {
              "id": 269,
              "nodeType": "StructuredDocumentation",
              "src": "2545:56:2",
              "text": "@dev check if the state of the apartment is for sale"
            },
            "id": 292,
            "name": "forSale",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "2623:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2622:11:2"
            },
            "src": "2606:130:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "2830:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 298,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2848:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 300,
                              "indexExpression": {
                                "id": 299,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "2855:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2848:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 154,
                            "src": "2848:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 302,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2870:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum ApartmentMarket.State)"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ForRent",
                            "nodeType": "MemberAccess",
                            "src": "2870:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum ApartmentMarket.State"
                            }
                          },
                          "src": "2848:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 305,
                                "name": "Houses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "2887:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                  "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                                }
                              },
                              "id": 307,
                              "indexExpression": {
                                "id": 306,
                                "name": "_sku",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "2894:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2887:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_House_$161_storage",
                                "typeString": "struct ApartmentMarket.House storage ref"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentprice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 151,
                            "src": "2887:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2912:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2887:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2848:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2840:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:74:2"
                },
                {
                  "id": 314,
                  "nodeType": "PlaceholderStatement",
                  "src": "2924:1:2"
                }
              ]
            },
            "documentation": {
              "id": 293,
              "nodeType": "StructuredDocumentation",
              "src": "2741:56:2",
              "text": "@dev check if the state of the apartment is for rent"
            },
            "id": 316,
            "name": "forRent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "2819:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:11:2"
            },
            "src": "2802:130:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "3028:69:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$143",
                          "typeString": "enum ApartmentMarket.State"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 322,
                              "name": "Houses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3046:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                                "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                              }
                            },
                            "id": 324,
                            "indexExpression": {
                              "id": 323,
                              "name": "_sku",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "3053:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3046:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_House_$161_storage",
                              "typeString": "struct ApartmentMarket.House storage ref"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 154,
                          "src": "3046:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 326,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "3068:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                              "typeString": "type(enum ApartmentMarket.State)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rent",
                          "nodeType": "MemberAccess",
                          "src": "3068:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          }
                        },
                        "src": "3046:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:41:2"
                },
                {
                  "id": 331,
                  "nodeType": "PlaceholderStatement",
                  "src": "3089:1:2"
                }
              ]
            },
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "2938:60:2",
              "text": "@dev check if the state of the apartment is rent already"
            },
            "id": 333,
            "name": "Rent",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 333,
                  "src": "3017:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:11:2"
            },
            "src": "3003:94:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "3128:78:2",
              "statements": [
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 336,
                      "name": "skuCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3187:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3198:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3187:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3187:12:2"
                }
              ]
            },
            "id": 341,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3118:2:2"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3128:0:2"
            },
            "scope": 508,
            "src": "3107:99:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "3436:485:2",
              "statements": [
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 353,
                        "name": "Houses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3488:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                          "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                        }
                      },
                      "id": 355,
                      "indexExpression": {
                        "id": 354,
                        "name": "skuCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "3495:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3488:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_storage",
                        "typeString": "struct ApartmentMarket.House storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 357,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "3525:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 358,
                          "name": "skuCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "3542:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 359,
                          "name": "_sellprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "3568:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3596:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 361,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "3610:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                              "typeString": "type(enum ApartmentMarket.State)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForSale",
                          "nodeType": "MemberAccess",
                          "src": "3610:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3646:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3646:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3638:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3638:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3638:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3691:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3683:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 370,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3683:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3683:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3675:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3675:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3675:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3724:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3716:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 377,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3716:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3716:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3708:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 375,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3708:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3708:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum ApartmentMarket.State"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 356,
                        "name": "House",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3507:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_House_$161_storage_ptr_$",
                          "typeString": "type(struct ApartmentMarket.House storage pointer)"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "name",
                        "sku",
                        "sellprice",
                        "rentprice",
                        "state",
                        "seller",
                        "houseowner",
                        "renter"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3507:227:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_House_$161_memory_ptr",
                        "typeString": "struct ApartmentMarket.House memory"
                      }
                    },
                    "src": "3488:246:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_House_$161_storage",
                      "typeString": "struct ApartmentMarket.House storage ref"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:246:2"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 385,
                      "name": "skuCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3780:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 386,
                        "name": "skuCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "3791:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3791:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3780:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:23:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 392,
                          "name": "skuCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "3862:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3873:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3862:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 391,
                      "name": "LogForSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3851:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "EmitStatement",
                  "src": "3846:29:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3910:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 352,
                  "id": 398,
                  "nodeType": "Return",
                  "src": "3903:11:2"
                }
              ]
            },
            "documentation": {
              "id": 342,
              "nodeType": "StructuredDocumentation",
              "src": "3211:122:2",
              "text": "@dev here you can set isOnwer modifier to allow only the contract owner to add apartment to the contract, if necessary"
            },
            "functionSelector": "c88be663",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 349,
                "modifierName": {
                  "id": 348,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3406:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3406:9:2"
              }
            ],
            "name": "addHouse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3356:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "_sellprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3377:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3355:38:2"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3430:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3430:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3429:6:2"
            },
            "scope": 508,
            "src": "3338:583:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "4031:218:2",
              "statements": [
                {
                  "expression": {
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 416,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4037:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 418,
                        "indexExpression": {
                          "id": 417,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4044:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4037:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "houseowner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "4037:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4070:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4070:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4062:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4062:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4062:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4037:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:44:2"
                },
                {
                  "expression": {
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 427,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4087:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "id": 428,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4094:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4087:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154,
                      "src": "4087:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 431,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4107:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                          "typeString": "type(enum ApartmentMarket.State)"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForRent",
                      "nodeType": "MemberAccess",
                      "src": "4107:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "src": "4087:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum ApartmentMarket.State"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 440,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4154:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 442,
                          "indexExpression": {
                            "id": 441,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "4161:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4154:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 149,
                        "src": "4154:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 435,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4126:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "id": 436,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "4133:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4126:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 156,
                        "src": "4126:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4126:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:50:2"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 446,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4182:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "id": 447,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4189:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4182:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rentprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 151,
                      "src": "4182:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 450,
                      "name": "_rentprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "4206:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4182:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4182:34:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "4238:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 453,
                      "name": "LogForRent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "4227:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4227:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "EmitStatement",
                  "src": "4222:20:2"
                }
              ]
            },
            "functionSelector": "9979c009",
            "id": 458,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 407,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "3994:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 408,
                "modifierName": {
                  "id": 406,
                  "name": "forSale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 292,
                  "src": "3986:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3986:12:2"
              },
              {
                "arguments": [
                  {
                    "id": 410,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "4010:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 411,
                "modifierName": {
                  "id": 409,
                  "name": "paidEnough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 193,
                  "src": "3999:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3999:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 413,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "4026:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 414,
                "modifierName": {
                  "id": 412,
                  "name": "checkValue",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 239,
                  "src": "4015:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4015:15:2"
              }
            ],
            "name": "buyItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "3944:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3944:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "_rentprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "3954:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3943:27:2"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4031:0:2"
            },
            "scope": 508,
            "src": "3927:322:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "4346:172:2",
              "statements": [
                {
                  "expression": {
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 472,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4352:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 474,
                        "indexExpression": {
                          "id": 473,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "4359:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4352:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "renter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 160,
                      "src": "4352:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 478,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4381:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4381:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4373:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4373:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4373:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4352:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "4352:40:2"
                },
                {
                  "expression": {
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 483,
                          "name": "Houses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "4398:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                            "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "id": 484,
                          "name": "sku",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "4405:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4398:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_House_$161_storage",
                          "typeString": "struct ApartmentMarket.House storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154,
                      "src": "4398:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 487,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4418:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                          "typeString": "type(enum ApartmentMarket.State)"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Rent",
                      "nodeType": "MemberAccess",
                      "src": "4418:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum ApartmentMarket.State"
                      }
                    },
                    "src": "4398:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum ApartmentMarket.State"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "4398:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 496,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4466:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 498,
                          "indexExpression": {
                            "id": 497,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "4473:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4466:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 151,
                        "src": "4466:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "Houses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "4434:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_House_$161_storage_$",
                              "typeString": "mapping(uint256 => struct ApartmentMarket.House storage ref)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "sku",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "4441:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4434:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_House_$161_storage",
                            "typeString": "struct ApartmentMarket.House storage ref"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "houseowner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 158,
                        "src": "4434:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4434:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4434:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4434:54:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 503,
                        "name": "sku",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "4507:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 502,
                      "name": "LogRent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "4499:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "EmitStatement",
                  "src": "4494:17:2"
                }
              ]
            },
            "functionSelector": "d78d3852",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 463,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 460,
                    "src": "4306:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 464,
                "modifierName": {
                  "id": 462,
                  "name": "forRent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 316,
                  "src": "4298:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4298:12:2"
              },
              {
                "arguments": [
                  {
                    "id": 466,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 460,
                    "src": "4326:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 467,
                "modifierName": {
                  "id": 465,
                  "name": "rentpaidEnough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "4311:14:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4311:19:2"
              },
              {
                "arguments": [
                  {
                    "id": 469,
                    "name": "sku",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 460,
                    "src": "4341:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 470,
                "modifierName": {
                  "id": 468,
                  "name": "checkRent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "4331:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4331:14:2"
              }
            ],
            "name": "rentItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "sku",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "4273:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4273:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4272:10:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4346:0:2"
            },
            "scope": 508,
            "src": "4255:263:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 509,
        "src": "351:4169:2"
      }
    ],
    "src": "32:4489:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1637471193250": {
      "events": {},
      "links": {},
      "address": "0x98D928D8502579127B1bD3bFD75f825A4F1eB850",
      "transactionHash": "0xfcf63288e57cd46751165923def5ead04b204abd76e9044b524e3fa09d19205c"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-21T05:45:04.021Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Laura Shi",
    "events": {
      "LogForRent(uint256)": {
        "details": "<LogForRent event: sku arg>"
      },
      "LogForSale(uint256)": {
        "details": "<LogForSale event: sku arg>"
      },
      "LogRent(uint256)": {
        "details": "<LogRent event: sku arg>"
      }
    },
    "kind": "dev",
    "methods": {
      "addHouse(string,uint256)": {
        "details": "here you can set isOnwer modifier to allow only the contract owner to add apartment to the contract, if necessary"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "skuCount": {
        "details": "skuCount Number of apartments in the contract"
      }
    },
    "title": "A sample of Apartment Marketplace",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "You can use this contract to stimuate on chain apartment purchasing and renting function",
    "version": 1
  }
}